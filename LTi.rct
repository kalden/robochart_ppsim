import common_functions::*
interface LTi_Attributes {   
	var LTi_loc : Double2D            
var angle_to_move : real         
	
	var high_chemokine_grid_square : int = 99  
	var cellSpeed : real
	var tracking : Tracking_Stats 
	var cell_id : int
	var totalchemoLevels : real
	var chemomap : TreeMap
}
robotic platform LTiStep {     

provides LTi_Attributes provides Operations
}
controller LTiController {
	sref stm_ref0 = LTi_State_Machine

requires LTi_Attributes requires Operations
}
stm LTi_State_Machine {
	
	
	
	var move_finished : boolean = false
	var adhered : boolean = false
	var contactedCell_ID : int = - 1
	initial i0
	state Chemotactic {
		state Motile {
		 
		 
		 
		 
		 
		entry if move_finished == false then if movement_interval > distanceToMove
			then movement_interval = distanceToMove end ; LTi_loc = calculateNewPosition
			( LTi_loc , angle_to_move , movement_interval ) ; distanceToMove =
			distanceToMove - movement_interval ; distanceMoved = distanceMoved +
			movement_interval ; setPositionOnTract( cell_id , LTi_loc) ; if
			distanceToMove == 0 then move_finished = true end ; if
			check_valid_location_on_grid ( LTi_loc ) == true then contactedCell_ID =
			collision_check ( LTi_loc , tracking , cell_id , "LTi" ) ;
			probabilityOfAdhesion = calculate_probability_adhesion ( contactedCell_ID )
			else stop_cell_on_schedule( cell_id) ; move_finished = true ;
			probabilityOfAdhesion = 0 end end 
		}
		state Disassociated {
		
		
		
		
		
		entry angle_to_move = avoidCellCollision ( LTi_loc , distanceToMove ,
			contactedCell_ID ) ; LTi_loc = calculateNewPosition ( LTi_loc ,
			angle_to_move , distanceToMove ) ; if check_valid_location_on_grid ( LTi_loc
			) == true then setPositionOnTract( cell_id , LTi_loc) else
			stop_cell_on_schedule( cell_id) end ; distanceMoved = distanceMoved +
			distanceToMove ; distanceToMove = 0 ; move_finished = true ;
			contactedCell_ID = - 1
		}
		state Associated {
		
		entry adhered = true
		}
		probabilistic p0 initial i0
		
		transition t0 {
			from Motile
			to p0
		trigger
			condition contactedCell_ID != - 1
		}
		transition t1 {
			from p0
			to Disassociated
		probability 1 - probabilityOfAdhesion
		}
		transition t2 {
			from p0
			to Associated
		probability probabilityOfAdhesion
		}
		transition t7 {
			from Motile
			to Motile
			trigger
			condition contactedCell_ID == - 1 /\ move_finished == false
		}
	transition t3 {
			from i0
			to Motile
		}
		
	entry distanceToMove = cellSpeed ; distanceMoved = 0 ; movement_interval = 0.1
		; angle_to_move = calculate_angle_from_direction ( high_chemokine_grid_square
		) ; move_finished = false 
	exit update_tracking_stats( tracking , cell_id , LTi_loc , distanceMoved)
	} transition t1 {
		from Chemotactic
		to p0
	trigger
		condition contactedCell_ID == - 1 /\ since ( T ) > 0
		action totalchemoLevels = measure_chemokine_expression ( LTi_loc , chemomap )
			; if totalchemoLevels > 0 then high_chemokine_grid_square =
			calculate_high_grid_square ( chemomap ) else high_chemokine_grid_square = -
			1 end ; chemokine_response_probability = probability_responds_to_chemokine (
			LTi_loc , totalchemoLevels , chemomap ) ; # T
	}
	transition t2 {
		from p0
		to Non_Chemotactic
	probability 1 - chemokine_response_probability action 
	# T
	}
	transition t3 {
		from p0  
		to Chemotactic
	probability chemokine_response_probability action   
	# T
	}
	transition t4 {  
		from Non_Chemotactic
		to p0
	trigger
		condition contactedCell_ID == - 1 /\ since ( T ) > 0
		action totalchemoLevels = measure_chemokine_expression ( LTi_loc , chemomap )
			; if totalchemoLevels > 0 then high_chemokine_grid_square =
			calculate_high_grid_square ( chemomap ) else high_chemokine_grid_square = -
			1 end ; chemokine_response_probability = probability_responds_to_chemokine (
			LTi_loc , totalchemoLevels , chemomap ) ; # T
	}
	transition t5 {
		from Non_Chemotactic
		to Adhesion_Response
	trigger
		condition contactedCell_ID != - 1 /\ adhered == true /\ since ( T ) > 0
		action 
	
	# T
	}
	transition t6 {
		from Chemotactic
		to Adhesion_Response
	trigger
		condition contactedCell_ID != 1 /\ adhered == true /\ since ( T ) > 0
		action 
	
	# T
	}
	transition t0 {
		from i0
		to Chemotactic
	trigger
		action # T
	}
	
	
	
	transition t11 {
		from Adhesion_Response
		to Adhesion_Response
		trigger
		condition contactedCell_ID != - 1 /\ since ( T ) > 0
		action 
	
	# T
	}
	
	transition t7 {
		from Adhesion_Response
		to Chemotactic
		trigger
		condition contactedCell_ID == - 1 /\ since ( T ) > 0
		action totalchemoLevels = measure_chemokine_expression ( LTi_loc , chemomap )
			; if totalchemoLevels > 0 then high_chemokine_grid_square =
			calculate_high_grid_square ( chemomap ) else high_chemokine_grid_square = -
			1 end ; chemokine_response_probability = probability_responds_to_chemokine (
			LTi_loc , totalchemoLevels , chemomap ) ; # T
	}
	
state Non_Chemotactic {
	initial i0
		state Motile {
			
		
		
		
		entry if move_finished == false then if movement_interval > distanceToMove
			then movement_interval = distanceToMove end ; LTi_loc = calculateNewPosition
			( LTi_loc , angle_to_move , movement_interval ) ; distanceToMove =
			distanceToMove - movement_interval ; distanceMoved = distanceMoved +
			movement_interval ; setPositionOnTract( cell_id , LTi_loc) ; if
			distanceToMove == 0 then move_finished = true end ; if
			check_valid_location_on_grid ( LTi_loc ) == true then contactedCell_ID =
			collision_check ( LTi_loc , tracking , cell_id , "LTi" ) ;
			probabilityOfAdhesion = calculate_probability_adhesion ( contactedCell_ID )
			else stop_cell_on_schedule( cell_id) ; move_finished = true ;
			probabilityOfAdhesion = 0 end end
		}
		state Disassociated {
			
		
		
		
		entry angle_to_move = avoidCellCollision ( LTi_loc , distanceToMove ,
			contactedCell_ID ) ; LTi_loc = calculateNewPosition ( LTi_loc ,
			angle_to_move , distanceToMove ) ; if check_valid_location_on_grid ( LTi_loc
			) == true then setPositionOnTract( cell_id , LTi_loc) else
			stop_cell_on_schedule( cell_id) end ; distanceMoved = distanceMoved +
			distanceToMove ; distanceToMove = 0 ; move_finished = true ;
			contactedCell_ID = - 1
		}
		state Associated {
			entry adhered = true
		}
		probabilistic p0 transition t0 {
			from Motile
			to p0
			trigger
			condition contactedCell_ID != - 1
		}
		transition t1 {
			from p0
			to Disassociated
			probability 1 - probabilityOfAdhesion
		}
		transition t2 {
			from p0
			to Associated
			probability probabilityOfAdhesion
		}
		transition t3 {
			from Motile
			to Motile
			trigger
			condition contactedCell_ID == - 1 /\ move_finished == false
		}
		transition t4 {
			from i0
			to Motile
		}
		
	entry distanceToMove = cellSpeed ; distanceMoved = 0 ; angle_to_move =
		calculate_angle_from_direction ( 99 ) ; move_finished = false ;
		movement_interval = 0.1 
	exit update_tracking_stats( tracking , cell_id , LTi_loc , distanceMoved)
	}
	probabilistic p0 state Adhesion_Response {
	state Adhered {
			
		
		entry if move_finished == false then probabilityOfAdhesion =
			calculate_probability_adhesion ( contactedCell_ID ) end
		}
		state Disassociated {
			
		
		
		
		
		entry angle_to_move = avoidCellCollision ( LTi_loc , distanceToMove ,
			contactedCell_ID ) ; LTi_loc = calculateNewPosition ( LTi_loc ,
			angle_to_move , distanceToMove ) ; if check_valid_location_on_grid ( LTi_loc
			) == true then setPositionOnTract( cell_id , LTi_loc) else
			stop_cell_on_schedule( cell_id) end ; distanceMoved = distanceMoved +
			distanceToMove ; distanceToMove = 0 ; move_finished = true ;
			contactedCell_ID = - 1 ; adhered = false
		}
		probabilistic p0 initial i0 
		transition t0 {
			from Adhered
			to p0
		trigger
			condition move_finished == false
		}
		transition t1 {     
			from p0
			to Disassociated
			probability 1 - probabilityOfAdhesion  
		}
		transition t2 { 
			from p0 
			to Adhered
			probability probabilityOfAdhesion action move_finished = true 
		}
		transition t3 { 
			from i0
			to Adhered  
		}
		
	
	entry distanceToMove = cellSpeed ; distanceMoved = 0 ; angle_to_move =
		calculate_angle_from_direction ( high_chemokine_grid_square ) ; move_finished
		= false     
	exit update_tracking_stats( tracking , cell_id , LTi_loc , distanceMoved)
	}
	requires LTi_Attributes
	var probabilityOfAdhesion : real
	var chemokine_response_probability : real
	clock T

	var distanceToMove : real
	var distanceMoved : real
	var movement_interval : real
	

requires Operations
}
module LTiModule {
	cref ctrl_ref0 = LTiController
	rref rp_ref0 = LTiStep
}