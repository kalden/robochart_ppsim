diagram LTin import common_functions::*
interface LTin_Attributes {
	var LTin_loc : Double2D
	var angle_to_move : real
}
robotic platform LTin_Step {
	provides Operations provides System_Parameters provides LTin_Attributes
}
controller LTin_Controller {
	requires Operations requires System_Parameters requires LTin_Attributes sref
	stm_ref0 = LTin_State_Machine
}
stm LTin_State_Machine {
	requires Operations
	requires System_Parameters
	requires LTin_Attributes
	var move_finished : boolean
	var adhered : boolean
	var contactedCell : boolean
	var probabilityOfAdhesion : real
	state Moving {
		initial i0
		state Motile {
			entry if move_finished == false then probabilityOfAdhesion = Random_Walk ( )
			end
		}
		state Disassociated {
			entry disassociate_cells() ; move_finished = true ; contactedCell = false
		}
		state Associated {
			entry adhered = true
		}
		probabilistic p0 transition t0 {
			from i0
			to Motile
		}
		transition t1 {
			from p0
			to Disassociated
			probability 1 - probabilityOfAdhesion
		}
		transition t2 {
			from Motile
			to p0
			trigger
			condition contactedCell == true
		}
		transition t3 {
			from p0
			to Associated
			probability probabilityOfAdhesion
		}
		transition t4 {
			from Motile
			to Motile
			trigger
			condition contactedCell == false /\ move_finished == false
		}
		entry angle_to_move = calculate_angle_from_direction ( 99 ) ; move_finished =
		false
	}
	initial i0
	state Adhesion_Response {
		state Adhered {
			entry if move_finished == false then probabilityOfAdhesion =
			calculate_adhesion_probability ( ) end
		}
		state Disassociated {
			entry disassociate_cells() ; contactedCell = false ; adhered = false ;
			move_finished = true
		}
		probabilistic p0 initial i0
		transition t0 {
			from Adhered
			to p0
		}
		transition t1 {
			from p0
			to Disassociated
			probability 1 - probabilityOfAdhesion
		}
		transition t2 {
			from p0
			to Adhered
			probability probabilityOfAdhesion action move_finished = true
		}
		transition t3 {
			from i0
			to Adhered
		}
		entry angle_to_move = calculate_angle_from_direction ( 99 ) ; move_finished =
		false
	}
	transition t0 {
		from i0
		to Moving
	}
	transition t1 {
		from Moving
		to Moving
		trigger
		condition contactedCell == false /\ chemokine_in_environment == false /\ since
		( T ) > 0
		action 
	# T
	}
	transition t2 {
		from Adhesion_Response
		to Adhesion_Response
		trigger
		condition contactedCell == true /\ since ( T ) > 0
		action 
	# T
	}
	transition t3 {
		from Moving
		to Adhesion_Response
		trigger
		condition contactedCell == true /\ adhered == true /\ since ( T ) > 0
		action 
	# T
	}
	transition t4 {
		from Adhesion_Response
		to Moving
		trigger
		condition contactedCell == false /\ since ( T ) > 0
		action 
	# T
	}
	clock T
}
module LTin_Module {
	cref ctrl_ref0 = LTin_Controller
	rref rp_ref0 = LTin_Step
}